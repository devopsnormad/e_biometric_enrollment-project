<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="textSearch.IconLeft" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAA6tJREFUaEPt
        mctrE1EUxqPiC3UlPra+9T8QFRFFN7qt4BulFCmG2plJoRKTMxNbLAUVd+pCcKEgvqj4oK4qggVFUAQR
        FdcVfKCbplXrd8IZuDO5re3k3phIfnBok+/OOffMfcyZm1SDBjUIUWZpzncP5cm9RL47SL73CX+/sOV9
        dwj2lHznIgXOwRNdbUvkstoBnd+eD9xH6PBPdHZsMsZtYf0539kmbv4dRO0ruTO6jk7JAu8BfC0Xt9UF
        o7AHnfhR1qmEhhvynQJvt7ivDpj7pOuM2Bvop4jcTUTO6s7uzoVs/D9/h/XThTZvY9eUDDfnNwVuTsLY
        hTup6wTu6POpzHdeV7jmhc4XkvWlmR1KO1J54CLuYmtqLDVNmk0aIpoOn2kkNBL3i+/3STOzZAuZFQgQ
        XxNDmDIbpEliStMQW7Xqm9dMtuAtkybmgOP7sUDDSGK9yBVzMshshN9iLEafyGYg8raoAUpBAueIyMbA
        FG0pi4PRErlysM/fizj3nScimQXrDKMwGI1laFS4lIDDUdU5TwORjYMR2KzGQiIjnd3pRSInB8PdrDqG
        vRTJGuj8azVmzvcOi5QcOL2iOsW06hbJGniO9Kgx8fmySMlBIpGHFhb+VpGswQ9LNWbe956JlBw4+qw6
        5VJDJGtgnayNxMQzRqTk8GKLOKXW+SJZo6OnY4EaE1YUKTm1kAj6MCxScuAoMrVQqqwSyRrZQscaNaap
        qfV/LHYkEt9+T4tkjTx5vWpMI9uvpnR/J5I1EOOjGhN13X6RkqMrUWxOL6LMjkgsUyUKU140uoNJXqT+
        CnzyeojFMlfK68t4t1lkY8Dn0bI4Jst4Bncm8mIFK3KCIlcMv+/zNFJjGB2NkHFedb+aOGDj7Rad/qb6
        xmc7r7qMZgdjG6XAO1bB4UMb+4j5HMsFzqv2M+1zpal5qnIcJAa933Yy4x7QIfj7PDln8TK0k6tY3PU5
        bNnC8XWonHdBP4d2H+LXjWfWk8EdNXpkOqEF7t30+fRsCW0eU4fYucB9CD99Oi006yPDlA4MAvcmgpWd
        GE5gRUzRG+Fzoul60wxcf1XTTrUBr9ebVwpqEzxXFpd2NuWHHgT/JRb5oUdXdnAyuPYa2umSCG2gGu9E
        FdNyoWUmkr2lSUC1RjJVZzLJQH9cN8lgE7mtSyK0RjL/Aq4M+AdTXRKhod7bK81rm4lGBtu5I83qA10y
        dZdECKbZLKyJO5wEHr6ufF2f8JpBEgfkY4MG1SOV+gMeT0ydpzXwWwAAAABJRU5ErkJggg==
</value>
  </data>
</root>